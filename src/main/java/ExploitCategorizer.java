import core.Parser;
import static core.Parser.DATA;
import java.util.ArrayList;
import java.util.List;

public class ExploitCategorizer {
    private static void help() {
        System.out.println("Help here.");
    }

    public static void main(String[] args) {
        int pages_to_parse = 1;
        String query = null;
        for(String arg : args) {
            if(arg.contains("?pages:")) {
                pages_to_parse = Integer.parseInt(arg.substring(arg.indexOf(":") + 1, arg.length()));
            }
            if(arg.contains("?query:")) {
                query = arg.substring(arg.indexOf(":") + 1, arg.length()).toLowerCase();;
            }
            if(arg.equals("?help")) {
                help();
            }
        }
        Parser parser = new Parser(pages_to_parse);
        if(query == null) {
            System.out.println("Error; no query supplied.");
            return;
        }
        System.out.println("Collecting data from exploit-db...");
        List<String> authors = new ArrayList<>(parser.Parse(DATA.AUTHORS));
        List<String> titles = new ArrayList<>(parser.Parse(DATA.TITLES));
        List<String> platforms = new ArrayList<>(parser.Parse(DATA.PLATFORMS));
        int references = 0;
        authors.replaceAll(String::toLowerCase);
        titles.replaceAll(String::toLowerCase);
        platforms.replaceAll(String::toLowerCase);
        for(int r = 0; r < authors.size(); r++) {
            if(authors.get(r).contains(query) || titles.get(r).contains(query) || platforms.get(r).contains(query)) {
                references++;
            }
        }
        System.out.println("Found " + references + " possible references for \"" + query+ "\" found within " + pages_to_parse + " pages.");
    }
}
