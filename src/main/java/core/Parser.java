package core;

import org.jsoup.*;
import org.jsoup.nodes.*;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;


public class Parser {
    private int pagesToSearch;
    public Parser(int pages) {
        this.pagesToSearch = pages + 1;
    }

    public enum DATA {
        TITLES, PLATFORMS, AUTHORS
    }

    @SuppressWarnings("SpellCheckingInspection")
    private String[] routes = {"/remote", "/webapps", "/local", "/dos", "/shellcode", "/papers"};

    public List<String> Parse(DATA data_t) {
        List<String> all_titles = new ArrayList<>();
        List<String> all_platforms = new ArrayList<>();
        List<String> all_authors = new ArrayList<>();
        try {
            for(int m = 1; m < this.pagesToSearch; m++) {
                for(int i = 0; i < this.routes.length - 1; i++) {
                    Document source = Jsoup.connect("https://www.exploit-db.com" + routes[i] + "/?order_by=date_published&order=desc&pg=" + m).get();
                    List<String> titles =  source.select(".exploit_list tr td").select(".description a").eachText();
                    List<String> platforms =  source.select(".exploit_list tr td").select(".platform a").eachText();
                    List<String> authors =  source.select(".exploit_list tr td").select(".author a").eachText();
                    all_titles.addAll(titles); all_authors.addAll(authors); all_platforms.addAll(platforms);
                }
            }
            switch(data_t) {
                case TITLES:
                    return all_titles;
                case PLATFORMS:
                    return all_platforms;
                case AUTHORS:
                    return all_authors;
                default:
                    return null;
            }
        } catch(IOException err) {
            err.printStackTrace();
        }
        return null;
    }
}
