package core;
import java.util.Dictionary;
import java.util.Hashtable;
import java.util.List;
import core.data.Categories;

@SuppressWarnings("SpellCheckingInspection")
public class Categoriser {
    private List<String> authors;
    private List<String> titles;
    private List<String> platforms;
    private String queried;

    public Categoriser(List<String> _authors, List<String> _titles, List<String> _platforms, String query) {
        this.authors = _authors;
        this.platforms = _platforms;
        this.titles = _titles;
        this.queried = query.toLowerCase();
    }

    public Dictionary<String, List<String[]>> Sort() {
        for(int i = 0; i < titles.size(); i++) {
            // this worked on first attempt, wtf, i don't trust this mystical voodoo code.
            for(int r = 0; r < Categories.GetCategoryData.size(); r++) {
                for(int q = 0; q < Categories.GetCategoryData.get(r).length; q++) {
                    if(titles.get(i).contains(Categories.GetCategoryData.get(r)[q])) {
                        if(titles.get(i).contains(this.queried) || platforms.get(i).contains((this.queried))) {
                            Categories.GetCategoryReferenceList.get(r).add(new String[]{titles.get(i), platforms.get(i), authors.get(i)});
                            break;
                        }
                    }
                }
            }
        }

        Dictionary<String, List<String[]>> sortedCategories = new Hashtable<>();
        for(int i = 0; i < Categories.CategoryNames.size(); i++) {
            sortedCategories.put(Categories.CategoryNames.get(i), Categories.GetCategoryReferenceList.get(i));
        }

        return sortedCategories;
    }
}
